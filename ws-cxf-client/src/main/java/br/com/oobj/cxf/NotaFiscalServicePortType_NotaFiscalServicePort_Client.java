
package br.com.oobj.cxf;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;

import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.io.xml.DomDriver;

/**
 * This class was generated by Apache CXF 3.0.2
 * 2014-11-05T11:59:43.094-02:00
 * Generated source version: 3.0.2
 * 
 */
public final class NotaFiscalServicePortType_NotaFiscalServicePort_Client {

    private static final QName SERVICE_NAME = new QName("http://cxf.oobj.com.br/", "NotaFiscalService");

    private NotaFiscalServicePortType_NotaFiscalServicePort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = NotaFiscalService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        NotaFiscalService ss = new NotaFiscalService(wsdlURL, SERVICE_NAME);
        NotaFiscalServicePortType port = ss.getNotaFiscalServicePort();  
        
//        {
//        System.out.println("Invoking imprimirNotaDaEmpresa...");
//        java.lang.String _imprimirNotaDaEmpresa_empresa = "Oobj Tecnologia da Informação";
//        java.lang.String _imprimirNotaDaEmpresa__return = port.imprimirNotaDaEmpresa(_imprimirNotaDaEmpresa_empresa);
//        System.out.println("imprimirNotaDaEmpresa.result=" + _imprimirNotaDaEmpresa__return);
//        }
        
        {
        System.out.println("Consultando o WebService - consomeXML...");
        java.lang.String xml = toXML(NotaFiscal.create("Oobj Tecnologia da Informação"));
        System.out.println("Envio: \n" + xml);
        String nfe = port.consomeXML(xml);
        System.out.println("Resposta: \n" + fromXML(nfe).toString());
        }

        System.exit(0);
    }

    /**
	 * Obtém o objeto NotaFiscal através de um XML em String
	 * 
	 * @param xml
	 * @return NotaFiscal
	 */
	private static NotaFiscal fromXML(String xml) {
		XStream xstream = getXStream();
		return (NotaFiscal) xstream.fromXML(xml);
	}
	
	/**
	 * Converte o objeto NotaFiscal em um XML para devolver no WS
	 * 
	 * @param nfe
	 * @return String (xml)
	 */
	private static String toXML(NotaFiscal nfe) {
		XStream xstream = getXStream();
		return xstream.toXML(nfe);
	}
	
	/**
	 * Cria uma instância do XStream, faz com que a instância leia as anotações automaticamente e o retorna 
	 * 
	 * @return XStream
	 */
	private static XStream getXStream() {
		XStream xstream = new XStream(new DomDriver());
		//xstream.autodetectAnnotations(Boolean.TRUE);
		return xstream;
	}
}
